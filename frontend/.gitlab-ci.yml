stages:
  - build
  - sonarqube-check
  - sonarqube-vulnerability-report
  - deploy

image: node:20-alpine

variables:
  VM_IP: "192.168.75.53"
  DEPLOY_PATH: "/var/www/react-app"
  FRONTEND_DIR: "transport-co2"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
  SONAR_PROJECT_KEY: "mif10_grp10_2024_mif10_grp10_2024_AZXaG0J-Re7mU3_qr5Pk"
  SONAR_SCANNER_OPTS: "-Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.qualitygate.wait=true"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .sonar/cache

# ---------------------
# 🏗 Build Frontend
# ---------------------
build-react:
  stage: build
  script:
    - cd $FRONTEND_DIR
    - npm install
    - npm run build
  artifacts:
    paths:
      - $FRONTEND_DIR/dist/
    expire_in: 1 hour

# ---------------------
# 🔍 SonarQube Scan
# ---------------------
sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
    SONAR_TOKEN: "${SONAR_TOKEN_FRONT}"
    SONAR_HOST_URL: "${SONAR_URL}"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo "🧪 Checking test files:"
    - find transport-co2/test -name "*.test.*"
    - sed -i 's|\\|/|g' transport-co2/coverage/lcov.info
    - >
      sonar-scanner
      -Dsonar.projectKey=$SONAR_PROJECT_KEY
      -Dsonar.qualitygate.wait=true
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.token=$SONAR_TOKEN
      -Dsonar.sources=./transport-co2/src
      -Dsonar.tests=./transport-co2/test
      -Dsonar.test.exclusions=''
      -Dsonar.exclusions="transport-co2/coverage/**/*"
      -Dsonar.javascript.lcov.reportPaths=transport-co2/coverage/lcov.info
      -Dsonar.scm.exclusions.disabled=true

  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

# ---------------------
# 🧪 SonarQube Report (GitLab SAST)
# ---------------------
sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  image: node:20-alpine
  before_script:
    - apk add --no-cache curl
  script:
    - curl -u "${SONAR_TOKEN_FRONT}:" "${SONAR_URL}/api/issues/gitlab_sast_export?projectKey=${SONAR_PROJECT_KEY}&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

# ---------------------
# 🚀 Deploy Frontend
# ---------------------
deploy-react:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update && apk add openssh-client rsync
    - chmod 400 $CI_SSH_KEY
    - mkdir -p ~/.ssh
    - ssh-keyscan $VM_IP >> ~/.ssh/known_hosts
  script:
    - rsync -avz --delete -e "ssh -i $CI_SSH_KEY" $FRONTEND_DIR/dist/ gitlabci@$VM_IP:$DEPLOY_PATH
  only:
    - main
